#!/bin/sh
#
# As of 0.13, xmonad --recompile will look for a custom build script.


################################################################################
# Edit the following constants and then rename this script to ~/.xmonad/build

# The directory holding your source code and stack.yaml file:
SRC_DIR=$HOME/.config/xmonad

# The name of the executable produced by stack.  This comes from the
# executable section of your *.cabal or package.yaml file.
EXE_NAME=xmonad
EXE_XMOBAR=xmobar
STACK_EXE=~paul/.ghcup/bin/stack

################################################################################



# Unset STACK_YAML, to ensure that $SRC_DIR/stack.yaml is used.
unset STACK_YAML
STACK_YAML=$SRC_DIR/stack.yaml
FAIL=0

# Do the build
cd $SRC_DIR

rm .log
$STACK_EXE build 2>>.log || FAIL=1

# Create a hard link at the requested destination, replacing any existing one.
ln -f -T $($STACK_EXE exec -- which $EXE_NAME) $1 2>>.log || FAIL=2

if [ $($STACK_EXE exec -- which $EXE_XMOBAR) != $(which $EXE_XMOBAR) ]; then
    ln -f -T $($STACK_EXE exec -- which $EXE_XMOBAR) $(which $EXE_XMOBAR) 2>>.log || FAIL=3
    killall $EXE_XMOBAR
fi

rm ./lib/XMonad/Actions/*.hi ./lib/XMonad/Actions/*.o 2>/dev/null

exit $FAIL
